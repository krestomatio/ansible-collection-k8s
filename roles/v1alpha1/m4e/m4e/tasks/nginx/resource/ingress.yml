- name: nginx ingress
  when:
    - expose_type is defined and expose_type
    - "(expose_type | lower) == 'ingress'"
  block:
    - name: nginx ingress resource definition
      vars:
        k8s_kind: Ingress
        k8s_state: "{{ nginx_ingress_state | default(nginx_state) }}"
        template: "{{ ingress_template }}"
        metadata_name: "{{ nginx_ingress }}"
        annotations: "{{ nginx_ingress_annotations | default(false) }}"
        ingress_spec: "{{ nginx_ingress_spec }}"
      import_tasks: "{{ common_path }}/k8s/object.yml"

    - name: save nginx ingress resource definition task
      set_fact:
        k8s_nginx_ingress: "{{ k8s_object_task }}"

    - name: wait for nginx ingress
      when:
        - _nginx_ingress_wait_for_ip | default(nginx_ingress_wait_for_ip) | default(false)
        - k8s_nginx_ingress is changed
        - "'absent' not in nginx_ingress_state | default(nginx_state)"
      block:
        - name: wait for nginx ingress ip
          register: nginx_ingress_ip_task
          until: (nginx_ingress_ip_task.resources | first).status.loadBalancer.ingress is defined
          retries: 6
          delay: 30
          k8s_info:
            api_version: networking.k8s.io/v1beta1
            kind: Ingress
            namespace: "{{ meta_namespace }}"
            name: "{{ nginx_ingress }}"

        - name: wait for nginx ingress uri to be accesible
          vars:
            _moodle_host_ip: "{{ (nginx_ingress_ip_task.resources |
              first).status.loadBalancer.ingress | map(attribute='ip') | first }}"
          register: nginx_ingress_uri_task
          check_mode: false
          until: nginx_ingress_uri_task.status == 200
          retries: 6
          delay: 30
          uri:
            url: "{{ moodle_protocol }}://{{ _moodle_host_ip }}"
            status_code: 200
            headers:
              host: "{{ moodle_host }}"

        - name: set nginx ingress ip status
          import_tasks: "{{ common_path }}/k8s/status.yml"
          vars:
            k8s_status_properties:
              ip: "{{ (nginx_ingress_ip_task.resources | first).status.loadBalancer.ingress |
                map(attribute='ip') | first }}"
