---
# moodle
moodle_state: "{{ state }}"
moodle_appname: "{{ meta_name }}-moodle"

# moodle deploy
moodle_image: quay.io/krestomatio/moodle@sha256:bbe59228ccb77e8fdf256e5866958db2058ce3e63d12b0283e11706ec7cf3cbd
moodle_image_pull_secret: "{{ image_pull_secret }}"
moodle_container: "moodle-php-fpm"
moodle_container_group: "{{ moodle_container.replace('-', '_') }}"
moodle_readiness_command: "['/usr/libexec/check-container-php', '-t', '-r']"
moodle_liveness_command: "['/usr/libexec/check-container-php', '-t', '-l']"

# moodle service
moodle_service: "{{ moodle_appname }}-service"
moodle_service_spec: |
  type: {{ moodle_service_type | default('ClusterIP') }}
  sessionAffinity: {{ moodle_service_session_affinity | default('None') }}
  {% if moodle_service_session_affinity_timeout is defined %}
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: {{ moodle_service_session_affinity_timeout }}
  {% endif %}
  ports:
  - name: php-fpm
    port: 9000
    protocol: TCP
    targetPort: 9000
  selector:
    app: '{{ moodle_appname }}'

# moodle app
moodle_app: /var/www/html
moodle_config_path: /config
moodle_scripts_path: "{{ moodle_config_path }}/scripts"
moodle_host: "m4e.krestomat.io"
moodle_port: false
moodle_subpath: false
moodle_protocol: http
moodle_healthcheck_subpath: /login/index.php
moodle_healthcheck_path: "{{ moodle_subpath | default('',true) + moodle_healthcheck_subpath }}"
moodle_config_autosync: true
moodle_new_adminpass_hash: $2b$10$zbRuwPil1wNWQUkvlkchwe3/rOljJvoheydndKH1X0bdIIigy0xim

# moodle new instance
moodle_new_instance: true
moodle_new_instance_fullname: Demo site
moodle_new_instance_shortname: demo
moodle_new_instance_summary: A demo site
moodle_new_instance_adminuser: admin
moodle_new_instance_adminmail: admin@example.com
moodle_new_instance_lang: en
moodle_new_instance_agree_license: false
moodle_new_instance_job: "{{ moodle_appname }}-new-instance-job"
moodle_new_instance_job_ttl_seconds_after_finished: false
moodle_new_instance_job_wait_timeout: 300
moodle_new_instance_job_active_deadline_seconds: "{{ moodle_new_instance_job_wait_timeout }}"
moodle_new_instance_job_resource_requests: true
moodle_new_instance_job_resource_requests_cpu: 150m
moodle_new_instance_job_resource_requests_memory: 256Mi
moodle_new_instance_job_resource_limits: false
moodle_new_instance_job_resource_limits_cpu: 1
moodle_new_instance_job_resource_limits_memory: 1Gi
moodle_new_instance_job_php_fpm_config_process_control_timeout: "{{ php_fpm_config_process_control_timeout }}"
moodle_new_instance_command:
  - '/bin/bash'
  - '-c'
  - |
    container-entrypoint
    {{ moodle_new_instance_job_command_snippet | indent(2) }}
moodle_new_instance_job_command_snippet: |-
  echo "Checking if database is available..."
  database_check_times=24
  database_check_exit_code=$(/usr/libexec/check-container-php -d &>/dev/null && echo 0 || echo $?)
  until [ ${database_check_times} -lt 0 ] || [ "${database_check_exit_code}" == "0" ] || [ "${database_check_exit_code}" == "2" ]; do
    echo "Waiting for database to be available: ${database_check_times}..."
    sleep 5
    (( database_check_times-- ))
    database_check_exit_code=$(/usr/libexec/check-container-php -d &>/dev/null || echo $?)
  done
  [ ${database_check_times} -lt 0 ] && echo "Error: timeout wating for database to be available, exit code: ${database_check_exit_code}" && exit ${database_check_exit_code}

  echo "Instantiating moodle..."
  /usr/libexec/check-container-php -d
  exit_code=$?
  if [ $exit_code -eq 2 ]; then
    echo "Installing..."
    php {{ '-d memory_limit=' + moodle_new_instance_job_php_max_memory if
    moodle_new_instance_job_php_max_memory else '' }} admin/cli/install_database.php \
      --lang='{{ moodle_new_instance_lang }}' \
      --fullname='{{ moodle_new_instance_fullname }}' \
      --shortname='{{ moodle_new_instance_shortname }}' \
      --summary='{{ moodle_new_instance_summary }}' \
      --adminuser='{{ moodle_new_instance_adminuser }}' \
      --adminpass='{{ moodle_new_adminpass | default('changeme') }}' \
      --adminemail='{{ moodle_new_instance_adminmail }}' \
      --agree-license
  elif [ $exit_code -eq 0 ]; then
    echo "WARNING: database already instantiated"
  else
    echo "Moodle could not be instantiated, exit code when checking database: '${exit_code}'"
    exit ${exit_code}
  fi
  {% if moodle_new_adminpass_hash is defined %}
  echo "Setting admin password..."
  php ${MOODLE_CLI_TOOLS}/reset-user-pass.php --userid=2 --hash='{{ moodle_new_adminpass_hash }}'
  {% endif %}
  {% if moodle_redis_muc_store %}
  echo "Setting redis MUC store"
  {{ moodle_redis_muc_store_script }}
  {% endif %}
moodle_new_instance_job_php_max_memory: ''
moodle_new_instance_job_tolerations: false

# moodle auto update
moodle_update_minor: true
moodle_update_major: false
moodle_update_job:
  "{{ moodle_appname }}-update-{{ moodle_status_version.allVersionsHash[:10]
  | default(now(utc=True).timestamp() | int) }}-job"
moodle_update_job_ttl_seconds_after_finished: 604800
moodle_update_job_wait_timeout: 300
moodle_update_job_active_deadline_seconds: "{{ moodle_update_job_wait_timeout }}"
moodle_update_job_resource_requests: true
moodle_update_job_resource_requests_cpu: 150m
moodle_update_job_resource_requests_memory: 256Mi
moodle_update_job_resource_limits: false
moodle_update_job_resource_limits_cpu: 1
moodle_update_job_resource_limits_memory: 1Gi
moodle_update_job_command:
  - '/bin/bash'
  - '-c'
  - |
    container-entrypoint
    {{ moodle_update_job_command_snippet | indent(2) }}
moodle_update_job_command_snippet: |-
  php {{ '-d memory_limit=' + moodle_update_job_php_max_memory if
  moodle_update_job_php_max_memory else '' }} admin/cli/upgrade.php --non-interactive
moodle_update_job_php_max_memory: ''
moodle_update_job_php_fpm_config_process_control_timeout: "{{ php_fpm_config_process_control_timeout }}"
moodle_update_job_tolerations: false

# moodle cronjob
moodle_cronjob: "{{ moodle_appname }}-cronjob"
moodle_cronjob_schedule: "*/1 * * * *"
moodle_cronjob_success_limit: 3
moodle_cronjob_failed_limit: 1
moodle_cronjob_parallelism: 1
moodle_cronjob_backoff_limit: 2
moodle_cronjob_suspend: "{{ moodle_update_job_needed }}"
moodle_cronjob_concurrency_policy: Allow
moodle_cronjob_command:
  - '/bin/bash'
  - '-c'
  - |
    container-entrypoint
    {{ moodle_cronjob_command_snippet | indent(2) }}
moodle_cronjob_command_snippet: |-
  php {{ '-d memory_limit=' + moodle_cronjob_php_max_memory if
  moodle_cronjob_php_max_memory else '' }} admin/cli/cron.php
moodle_cronjob_php_max_memory: ''
moodle_cronjob_resource_requests: true
moodle_cronjob_resource_requests_cpu: 50m
moodle_cronjob_resource_requests_memory: 128Mi
moodle_cronjob_resource_limits: false
moodle_cronjob_resource_limits_cpu: 1
moodle_cronjob_resource_limits_memory: 1Gi
moodle_cronjob_php_fpm_config_process_control_timeout: "{{ php_fpm_config_process_control_timeout }}"
moodle_cronjob_tolerations: false

# moodle data pvc
moodle_pvc_data: "{{ moodle_appname }}-moodledata-pvc"
moodle_pvc_data_storage_access_mode: ReadWriteOnce
moodle_pvc_data_storage_class_name: false
moodle_pvc_data_path: /var/moodledata
moodle_pvc_data_spec: |
  {% if moodle_pvc_data_storage_class_name is defined and moodle_pvc_data_storage_class_name %}
  storageClassName: {{ moodle_pvc_data_storage_class_name }}
  {% endif %}
  accessModes:
    - '{{ moodle_pvc_data_storage_access_mode }}'
  resources:
    requests:
      storage: '{{ moodle_pvc_data_size | default((moodle_pvc_data_size_gib | string + 'Gi'),true) }}'
moodle_pvc_data_source: |-
  persistentVolumeClaim:
    claimName: "{{ moodle_pvc_data }}"
moodle_pvc_data_size:
  "{{
    false
  if
    moodle_pvc_data_autoexpansion
  else
    lookup('k8s', api_version='v1', kind='PersistentVolumeClaim', namespace=meta_namespace,
    resource_name=moodle_pvc_data).spec.resources.requests.storage | default('1Gi')
  }}"
moodle_pvc_data_size_gib: "{{ cr_status_properties[routine_pvc_autoexpand_info_keyname].autoexpandSizeGib
    | default(moodle_pvc_data_autoexpansion_increment_gib) }}"
## enable autoexpansion
moodle_pvc_data_autoexpansion: false
### Increments in those GiB
moodle_pvc_data_autoexpansion_increment_gib: 1
### No more than those GiB
moodle_pvc_data_autoexpansion_cap_gib: 5

# optional moodle data nfs volume instead of pvc
moodle_nfs_meta_name: false
moodle_nfs_service: "{{ moodle_nfs_meta_name + '-nfs-service' if moodle_nfs_meta_name else '' }}"
moodle_nfs_namespace: "{{ meta_namespace }}"
## append a parent domain, ex: 'svc.cluster.local'
moodle_nfs_parent_domain: false
moodle_nfs_domain: "{{ moodle_nfs_namespace +
  ( '.' + moodle_nfs_parent_domain if moodle_nfs_parent_domain else '') }}"
moodle_nfs_data_server: "{{ moodle_nfs_service + '.' + moodle_nfs_domain if moodle_nfs_meta_name else '' }}"
moodle_nfs_data_share: /
moodle_nfs_data_source: |-
  csi:
    driver: nfs.csi.k8s.io
    volumeAttributes:
      server: "{{ moodle_nfs_data_server }}"  # required
      share: "{{ moodle_nfs_data_share }}"  # required
  {% if moodle_nfs_data_mount_options is defined and moodle_nfs_data_mount_options %}
      mountOptions: "{{ moodle_nfs_data_mount_options }}"  # optional
  {% endif %}
  {% if moodle_nfs_data_mount_permissions is defined and moodle_nfs_data_mount_permissions %}
      mountPermissions: "{{ moodle_nfs_data_mount_permissions }}"  # optional
  {% endif %}

# moodledata volume
moodle_volume_moodledata:
  name: moodledata
  mount_path: "{{ moodle_pvc_data_path }}"
  source: "{{ moodle_nfs_data_source if moodle_nfs_meta_name else moodle_pvc_data_source }}"

# moodle secrets
moodle_secret_config: "{{ moodle_appname }}-secret-config"
moodle_secret_config_data: |
  config.php: '{{ lookup('template', moodle_config_template) | b64encode }}'
moodle_secret_admin: "{{ moodle_appname }}-secret-admin"
moodle_secret_admin_data: |
  password_hash: '{{ moodle_new_adminpass_hash | b64encode }}'

# moodle config map
moodle_cm_scripts: "{{ moodle_appname }}-cm-scripts"
moodle_cm_scripts_data: |
  muc-store.php: |
    {{ lookup('template', moodle_script_muc_store_template) | indent(2) }}
  status.php: |
    {{ lookup('template', moodle_script_status_template) | indent(2) }}

# database
moodle_postgres_meta_name: false
moodle_database_service: "{{ moodle_postgres_meta_name + '-pgbouncer-service' if moodle_postgres_meta_name else '' }}"
moodle_database_secret: "{{ moodle_postgres_meta_name + '-postgres-secret' if moodle_postgres_meta_name else '' }}"
moodle_database_secret_dbname_key: database_name
moodle_database_secret_dbuser_key: database_user
moodle_database_secret_dbpass_key: database_password

# redis
moodle_keydb_meta_name: false
## redis host
moodle_redis_service: "{{ moodle_keydb_meta_name + '-keydb-service' if moodle_keydb_meta_name else '' }}"
## secret name to get auth from
moodle_redis_secret: "{{ moodle_keydb_meta_name + '-keydb-secret' if moodle_keydb_meta_name else '' }}"
moodle_redis_secret_auth_key: keydb_password
moodle_redis_host: "{{ moodle_redis_service }}"
## whether redis will be used as session store
moodle_redis_session_store: "{{ true if moodle_keydb_meta_name else false }}"
## whether redis will be used as muc store
moodle_redis_muc_store: "{{ true if moodle_keydb_meta_name else false }}"
## muc store
moodle_redis_muc_store_script: >-
  {{ moodle_scripts_path }}/muc-store.php
  {% if moodle_redis_muc_store_reset %}
  -r
  {% endif %}
  {% if moodle_redis_muc_store_overwrite %}
  -o
  {% endif %}
  -p='{{ moodle_redis_muc_store_plugin }}'
  -n='{{ moodle_redis_muc_store_name }}'
  -s='{{ moodle_redis_host }}'
  -a="${REDIS_PASSWORD}"
  -m='application,session'
  -e='{{ moodle_redis_muc_store_script_extra_config }}'
moodle_redis_muc_store_overwrite: "{{ true if moodle_keydb_meta_name else false }}"
moodle_redis_muc_store_reset: false
moodle_redis_muc_store_plugin: redis
moodle_redis_muc_store_name: redis
moodle_redis_muc_store_prefix: ''
moodle_redis_muc_store_serializer: 1
moodle_redis_muc_store_compressor: 0
moodle_redis_muc_store_script_extra_config:
  "{{ 'prefix=' + moodle_redis_muc_store_prefix +
  ',serializer=' + moodle_redis_muc_store_serializer | string +
  ',compressor=' + moodle_redis_muc_store_compressor | string }}"

# moodle config.php
moodle_config_dbhost: "{{ moodle_database_service }}"
## by default, database credential will be read from postgres secret:
moodle_config_dbname: "{{ '' if not moodle_database_secret else
  lookup('k8s', api_version='v1', kind='Secret', namespace=meta_namespace,
  resource_name=moodle_database_secret).data[moodle_database_secret_dbname_key] |
  default('') | b64decode }}"
moodle_config_dbuser: "{{ '' if not moodle_database_secret else
  lookup('k8s', api_version='v1', kind='Secret', namespace=meta_namespace,
  resource_name=moodle_database_secret).data[moodle_database_secret_dbuser_key] |
  default('') | b64decode }}"
moodle_config_dbpass: "{{ '' if not moodle_database_secret else
  lookup('k8s', api_version='v1', kind='Secret', namespace=meta_namespace,
  resource_name=moodle_database_secret).data[moodle_database_secret_dbpass_key] |
  default('') | b64decode }}"
moodle_config_wwwroot: "{{ moodle_protocol }}://{{ moodle_host
  + ( ':' + moodle_port | string if moodle_port else '' )
  + ( moodle_subpath if moodle_subpath else '' ) }}"
moodle_config_dataroot: "{{ moodle_pvc_data_path }}"
# moodle_config_context_cache_max_size: 7500
# moodle_config_dbtype: pgsql
# moodle_config_dblibrary: native
# moodle_config_prefix: "mdl_"
# moodle_config_dbpersist: "false"
# moodle_config_dbsocket: "false"
# moodle_config_dbport: "''"
moodle_config_dbhandlesoptions: "{{ moodle_database_service is search('pgbouncer') if
  moodle_postgres_meta_name else false }}"
# moodle_config_dbcollation: "utf8mb4_unicode_ci"
# moodle_config_fetchbuffersize: "100000"
# moodle_config_directorypermissions: "02777"
# moodle_config_admin: "admin"
# moodle_config_defaultblocks_override: "' '"
# moodle_config_xsendfile: "X-Sendfile"
# moodle_config_yuislasharguments: 1
# moodle_config_db_session: true
moodle_config_session_redis: "{{ moodle_redis_session_store }}"
moodle_config_session_redis_host: '{{ moodle_redis_host }}'
# moodle_config_session_redis_port: 6379
# moodle_config_session_redis_database: 0
moodle_config_session_redis_auth: "{{ '' if not moodle_redis_secret else
  lookup('k8s', api_version='v1', kind='Secret', namespace=meta_namespace,
  resource_name=moodle_redis_secret).data
  [moodle_redis_secret_auth_key | default('redis_password')] | default('') | b64decode }}"
# moodle_config_session_redis_prefix: ''
moodle_config_session_redis_acquire_lock_timeout: 120
moodle_config_session_redis_lock_expire: 7200
# moodle_config_session_redis_lock_retry: 100
# moodle_config_session_redis_serializer_use_igbinary: 'false'
# 'gzip', 'zstd'
# moodle_config_session_redis_compressor: 'none'
moodle_config_sslproxy: "{{ true if moodle_protocol == 'https' else false }}"
# moodle_config_profilingenabled:
#   earlyprofilingenabled: 'true'
#   profilingautofrec: '100'
#   profilingincluded: '/*view.php,/*index.php'
#   profilingallowme: 'true'
#   profilingallowall: 'true'
#   profilinglifetime: 1440
#   pathtodot: '/usr/bin/dot'
moodle_config_localcachedir: /var/localcache
# moodle_config_extramemorylimit: 256M
moodle_config_disableupdateautodeploy: true
# moodle_config_tool_lockstats: true
# moodle_config_perfdebug: true
# moodle_config_noemailever: true
# moodle_config_forced_plugin_settings:
#   mod_mymod:
#     setting_one: "one"
#     setting_two: 2
# moodle_config_tool_generator_users_password: secret
# moodle_config_additional_cfg:
#   property_name_one: "one"
#   property_name_two: 2
# moodle_config_additional_block: |
#   $CFG->property_name_one = 'value';
#   $CFG->property_name_two = 2;
