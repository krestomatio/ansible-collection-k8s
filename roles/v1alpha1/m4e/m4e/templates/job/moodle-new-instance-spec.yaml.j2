{% macro metadata() %}{% include common_path + '/metadata.j2' ignore missing %}{% endmacro %}
completions: 1
parallelism: 1
backoffLimit: 3
activeDeadlineSeconds: {{ moodle_new_instance_active_deadline_seconds }}
# ttlSecondsAfterFinished: 60
template:
  {{ metadata() | indent(width=2) }}
  spec:
    restartPolicy: Never
{% if moodle_app_container or k8s_distribution %}
    initContainers:
{% if moodle_app_container %}
    - name: 'moodle-app'
      image: '{{ moodle_image }}'
      # Shared volume with main container
      volumeMounts:
      - mountPath: '{{ moodle_app }}'
        name: moodle-app
{% endif %}
{% if k8s_distribution == 'k8s' %}
    - name: 'data-dir-permissions'
      image: '{{ php_fpm_image }}'
      securityContext:
        runAsUser: 0
      command:
        - '/bin/bash'
        - '-c'
        - |
          chown ${CTR_USER_ID}:${CTR_USER_ID} '{{ moodle_data }}'
          chmod 0740 {{ moodle_data }}
      volumeMounts:
      - mountPath: '{{ moodle_data }}'
        name: moodledata
{% endif %}
{% endif %}
    containers:
    - name: 'moodle-php-fpm-new-instance'
      image: '{{ php_fpm_image }}'
      env:
      - name: PHP_FPM_LISTEN_ALLOWED_CLIENTS
        value: any
      - name: PHP_FPM_PROCESS_CONTROL_TIMEOUT
        value: '{{ php_fpm_process_control_timeout }}'
      - name: MOODLE_ADMINPASS
        valueFrom:
          secretKeyRef:
            name: {{ moodle_secret }}
            key: moodle_new_instance_adminpass
      command:
        - '/bin/sh'
        - '-c'
        - |
          container-entrypoint echo "Instantiating moodle...";
          /usr/libexec/check-container-php -d;
          exit_code=$?;
          if [ $exit_code -eq 2 ];
          then
            {{ moodle_new_instance_cmd }};
          else
            echo "Moodle not instantiated, exit code when checking database: '${exit_code}'";
            exit 1;
          fi
      ports:
      - containerPort: 9000
      imagePullPolicy: IfNotPresent
      readinessProbe:
        exec:
          command: {{ moodle_new_instance_readiness_command }}
{% if moodle_new_instance_resource_requests or moodle_new_instance_resource_limits %}
      resources:
{% if moodle_new_instance_resource_requests %}
        requests:
          cpu: '{{ moodle_new_instance_resource_requests_cpu }}'
          memory: '{{ moodle_new_instance_resource_requests_memory }}'
{% endif %}
{% if moodle_new_instance_resource_limits %}
        limits:
          cpu: '{{ moodle_new_instance_resource_limits_cpu }}'
          memory: '{{ moodle_new_instance_resource_limits_memory }}'
{% endif %}
{% endif %}
      volumeMounts:
      - mountPath: '{{ moodle_data }}'
        name: moodledata
{% if moodle_app_container %}
      - mountPath: '{{ moodle_app }}'
        name: moodle-app
{% endif %}
      - mountPath: '{{ moodle_app }}/config.php'
        name: config-php
        subPath: config.php
        readOnly: true
    volumes:
    - name: moodledata
      persistentVolumeClaim:
        claimName: '{{ moodle_data_pvc }}'
{% if moodle_app_container %}
    - name: moodle-app
      emptyDir: {}
{% endif %}
    - name: config-php
      secret:
        secretName: '{{ moodle_secret }}'
        items:
        - key: config.php
          path: config.php
{% if moodle_new_instance_tolerations %}
    tolerations:
    {{ moodle_new_instance_tolerations | to_nice_yaml(indent=2) | indent(4) }}
{% endif %}
