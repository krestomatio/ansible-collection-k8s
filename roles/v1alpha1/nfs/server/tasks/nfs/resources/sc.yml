- name: nfs storage class resource definition
  vars:
    k8s_kind: StorageClass
    k8s_state: "{{ server_sc_state | default(server_state) }}"
    template: "{{ sc_template }}"
    metadata_name: "{{ server_sc }}"
    sc_parameters: "{{ server_sc_parameters }}"
    sc_mount_options: "{{ server_sc_mount_options }}"
    sc_provisioner: "{{ server_sc_provisioner }}"
    sc_allow_volume_expansion: "{{ server_sc_allow_volume_expansion }}"
    sc_reclaim_policy: "{{ server_sc_reclaim_policy }}"
    sc_volume_binding_mode: "{{ server_sc_volume_binding_mode }}"
    namespaced: false
  import_tasks: "{{ common_path }}/k8s/object.yml"

- name: save nfs storage class resource definition task
  set_fact:
    k8s_server_sc: "{{ k8s_object_task }}"

- name: set sc property in status
  import_tasks: "{{ common_path }}/k8s/status.yml"
  when: k8s_server_sc is changed
  vars:
    k8s_status_properties:
      storage_class: "{{ server_sc }}"
